stages:
  - build
  - image

variables:
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'
before_script:
  - GRADLE_USER_HOME="$(pwd)/.gradle" 
  - export GRADLE_USER_HOME


build-job:
  stage: build
  image: 'gradle:jdk17'
  script: gradle build -x test
  cache:
    key: $CI_COMMIT_REF_NAME
    policy: push
    paths:
      - build
      - .gradle


docker-image:
  stage: image
  image:
    name: 'gcr.io/kaniko-project/executor:debug'
    entrypoint:
      - ''
  dependencies:
    - build-job
  needs:
    - build-job
  variables:
    $DOCKER_CI_PROJECT_DIR: $CI_PROJECT_DIR/graphql-server
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # - echo /kaniko/executor --cleanup --context $DOCKER_CI_PROJECT_DIR --dockerfile $CI_PRODOCKER_CI_PROJECT_DIRJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    # - /kaniko/executor --cleanup --context $DOCKER_CI_PROJECT_DIR --dockerfile $DOCKER_CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - /kaniko/executor --cleanup --context $DOCKER_CI_PROJECT_DIR --dockerfile $DOCKER_CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:latest
